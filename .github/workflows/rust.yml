name: Rust

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Compile
  #       id: compile
  #       uses: rust-build/rust-build.action@v1.4.4
  #       with:
  #         RUSTTARGET: x86_64-unknown-linux-musl
  #         UPLOAD_MODE: none
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: Binary
  #         path: |
  #           ${{ steps.compile.outputs.BUILT_ARCHIVE }}
  #           ${{ steps.compile.outputs.BUILT_CHECKSUM }}

# env:
#   CARGO_TERM_COLOR: always

# jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name:  upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: static-artifact
        path: target/debug/deps/
  release:
    name: Release project
    runs-on: ubuntu-latest
    permissions:
      contents: write    
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with: 
          name: static-artifact
      - name: Test artifact download
        run: ls -R 

      - name: Archive content
        uses: thedoctor0/zip-release@0.7.5
        with:
          command: ls -R  /home/runner/work/serialus/
          # command: ls -al
          filename: serialus.zip
      # - uses: actions/checkout@v3

      - name: Check zip
        run: ls -R /home/runner/work/serialus/
      
      - name: Create GitHub release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          # title: Release ${{ github.run_number }}
          tag_name: release_${{ github.run_number }}
          release_name: Release ${{ github.run_number }}

      - name: Publish release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: serialus.zip
          asset_name: serialus-v${{ github.run_number }}.zip
          asset_content_type: application/zip
